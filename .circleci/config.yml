# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
version: 2.1
orbs:
  composer: stockfiller/composer@1.0.0
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-shopware-arm:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true 
    resource_class: arm.medium

    steps:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
      - checkout
      - composer/install
      
      #Install Dependencies      
      - run: make install

      #ORCA Generate
      - run: make generate -B

      #Verify Configuration
      - run: make verify image=play tag=6.4.18.1 -B

      #name: Build Image
      - run: make build image=play tag=6.4.18.1 -B

      # Run SVRUnit Tests
      - run: make test image=play tag=6.4.18.1 -B

  build-shopware-amd:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true 
    resource_class: amd.medium

    steps:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
      - checkout

      #Install Dependencies      
      - run: make install

      #ORCA Generate
      - run: make generate -B

      #Verify Configuration
      - run: make verify image=play tag=6.4.18.1 -B

      #name: Build Image
      - run: make build image=play tag=6.4.18.1 -B

      # Run SVRUnit Tests
      - run: make test image=play tag=6.4.18.1 -B

workflows:
  build-base-image:
    #when: << pipeline.parameters.build-image >>
    jobs:
      - build-shopware-arm
      - build-shopware-arm      
      #- merge-manifest:
          #requires:
          #  - php80-arm64
          #  - php80-amd64
          #  - php81-arm64
          #  - php81-amd64
