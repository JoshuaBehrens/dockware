# PHP CircleCI 2.0 configuration file
# See: https://circleci.com/docs/2.0/language-php/
version: 2.1

workflows:  
  build-image:  
    jobs:
      - build-shopware-arm        
      - build-shopware-amd
      - create-manifest-push:          
          requires:
            - build-shopware-arm
            - build-shopware-amd

        



# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-shopware-arm:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true 
    resource_class: arm.medium

    steps:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install -y php-xml unzip
      - run: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      - run: php composer-setup.php
      - run: sudo mv composer.phar /usr/local/bin/composer
      
      #Install Dependencies      
      - run: make install

      #ORCA Generate
      - run: make generate -B

      #Verify Configuration
      - run: make verify image=play tag=6.4.18.1 -B

      #name: Build Image
      - run: ./dist/images/play/6.4.18.1 && DOCKER_BUILDKIT=1 docker build -t dockware/play:6.4.18.1-arm64 .

      # Run SVRUnit Tests
      - run: make test image=play tag=6.4.18.1 -B

      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: push amd image
          command: |
            docker push dockware/play:6.4.18.1-amd64
  

  build-shopware-amd:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true 
    resource_class: medium

    steps:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install -y php-xml unzip      
      - run: php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      - run: php composer-setup.php
      - run: sudo mv composer.phar /usr/local/bin/composer

      #Install Dependencies      
      - run: make install

      #ORCA Generate
      - run: make generate -B

      #Verify Configuration
      - run: make verify image=play tag=6.4.18.1 -B

      #name: Build Image
      - run: ./dist/images/play/6.4.18.1 && DOCKER_BUILDKIT=1 docker build -t dockware/play:6.4.18.1-amd64 .

      # Run SVRUnit Tests
      - run: make test image=play tag=6.4.18.1 -B
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: push amd image
          command: |
            docker push dockware/play:6.4.18.1-amd64
  
  create-manifest-push:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true 
    resource_class: medium
    
    steps:
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            
      - run: docker manifest create dockerhub.com/dockware/play:6.4.18.1 --amend dockerhub.com/dockware/play:6.4.18.1-amd64 --amend dockerhub.com/dockware/play:6.4.18.1-arm64
      
      - run: docker manifest push dockerhub.com/dockware/play:6.4.18.1



        